/* Copyright (C) 2011-2015 Zeex
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

[native] int CreateActor([in] int modelid, [in] float x, [in] float y, [in] float z, [in] float rotation);
[native] bool DestroyActor([in] int actorid);
[native] bool IsActorStreamedIn([in] int actorid, [in] int forplayerid);

[native] bool SetActorVirtualWorld([in] int actorid, [in] int vworld);
[native] int GetActorVirtualWorld([in] int actorid);

[native] [bool] ApplyActorAnimation([in] int actorid, [in] string animlib, [in] string animname, [in] float fDelta, [in] bool loop, [in] bool lockx, [in] bool locky, [in] bool freeze, [in] int time);
[native] [bool] ClearActorAnimations([in] int actorid);

[native] [bool] SetActorPos([in] int actorid, [in] float x, [in] float y, [in] float z);
[native] [bool] GetActorPos([in] int actorid, [out] float x, [out] float y, [out] float z);
[native] [bool] SetActorFacingAngle([in] int actorid, [in] float angle);
[native] [bool] GetActorFacingAngle([in] int actorid, [out] float angle);

[native] [bool] SetActorHealth([in] int actorid, [in] float health);
[native] [bool] GetActorHealth([in] int actorid, [out] float health);
[native] [bool] SetActorInvulnerable([in] int actorid, [in] bool invulnerable = true);
[native] [bool] IsActorInvulnerable([in] int actorid);

[native] [bool] IsValidActor([in] int actorid);

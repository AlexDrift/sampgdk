Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> text
Rule 1     text -> <empty>
Rule 2     text -> code
Rule 3     code -> stat SEMICOLON
Rule 4     code -> stat SEMICOLON code
Rule 5     stat -> decl
Rule 6     decl -> constdecl
Rule 7     decl -> funcdecl
Rule 8     constdecl -> CONST typename IDENT EQUALS constexpr
Rule 9     constexpr -> number
Rule 10    constexpr -> bool
Rule 11    constexpr -> char
Rule 12    constexpr -> string
Rule 13    constexpr -> constref
Rule 14    number -> dec
Rule 15    number -> oct
Rule 16    number -> hex
Rule 17    number -> float
Rule 18    dec -> INT
Rule 19    oct -> OCT
Rule 20    hex -> HEX
Rule 21    float -> FLOAT
Rule 22    char -> pchar
Rule 23    char -> echar
Rule 24    char -> achar
Rule 25    char -> uchar
Rule 26    pchar -> PCHAR
Rule 27    echar -> ECHAR
Rule 28    achar -> ACHAR
Rule 29    uchar -> UCHAR
Rule 30    bool -> BOOL
Rule 31    string -> STRING
Rule 32    constref -> IDENT
Rule 33    funcdecl -> typename IDENT params
Rule 34    funcdecl -> attrs typename IDENT params
Rule 35    attrs -> LBRACKET attrlist RBRACKET
Rule 36    attrlist -> attr
Rule 37    attrlist -> attr COMMA attrlist
Rule 38    attr -> IDENT
Rule 39    attr -> IDENT LPAREN constexpr RPAREN
Rule 40    params -> LPAREN paramlist RPAREN
Rule 41    paramlist -> <empty>
Rule 42    paramlist -> param
Rule 43    paramlist -> param COMMA paramlist
Rule 44    param -> typename IDENT
Rule 45    param -> typename IDENT EQUALS constexpr
Rule 46    param -> attrs typename IDENT
Rule 47    param -> attrs typename IDENT EQUALS constexpr
Rule 48    typename -> IDENT

Terminals, with rules where they appear

ACHAR                : 28
BOOL                 : 30
COMMA                : 37 43
CONST                : 8
ECHAR                : 27
EQUALS               : 8 45 47
FLOAT                : 21
HEX                  : 20
IDENT                : 8 32 33 34 38 39 44 45 46 47 48
INT                  : 18
LBRACKET             : 35
LPAREN               : 39 40
OCT                  : 19
PCHAR                : 26
RBRACKET             : 35
RPAREN               : 39 40
SEMICOLON            : 3 4
STRING               : 31
UCHAR                : 29
error                : 

Nonterminals, with rules where they appear

achar                : 24
attr                 : 36 37
attrlist             : 35 37
attrs                : 34 46 47
bool                 : 10
char                 : 11
code                 : 2 4
constdecl            : 6
constexpr            : 8 39 45 47
constref             : 13
dec                  : 14
decl                 : 5
echar                : 23
float                : 17
funcdecl             : 7
hex                  : 16
number               : 9
oct                  : 15
param                : 42 43
paramlist            : 40 43
params               : 33 34
pchar                : 22
stat                 : 3 4
string               : 12
text                 : 0
typename             : 8 33 34 44 45 46 47
uchar                : 25

Parsing method: LALR

state 0

    (0) S' -> . text
    (1) text -> .
    (2) text -> . code
    (3) code -> . stat SEMICOLON
    (4) code -> . stat SEMICOLON code
    (5) stat -> . decl
    (6) decl -> . constdecl
    (7) decl -> . funcdecl
    (8) constdecl -> . CONST typename IDENT EQUALS constexpr
    (33) funcdecl -> . typename IDENT params
    (34) funcdecl -> . attrs typename IDENT params
    (48) typename -> . IDENT
    (35) attrs -> . LBRACKET attrlist RBRACKET

    $end            reduce using rule 1 (text -> .)
    CONST           shift and go to state 4
    IDENT           shift and go to state 9
    LBRACKET        shift and go to state 7

    decl                           shift and go to state 1
    stat                           shift and go to state 2
    code                           shift and go to state 3
    text                           shift and go to state 5
    funcdecl                       shift and go to state 6
    typename                       shift and go to state 8
    attrs                          shift and go to state 10
    constdecl                      shift and go to state 11

state 1

    (5) stat -> decl .

    SEMICOLON       reduce using rule 5 (stat -> decl .)


state 2

    (3) code -> stat . SEMICOLON
    (4) code -> stat . SEMICOLON code

    SEMICOLON       shift and go to state 12


state 3

    (2) text -> code .

    $end            reduce using rule 2 (text -> code .)


state 4

    (8) constdecl -> CONST . typename IDENT EQUALS constexpr
    (48) typename -> . IDENT

    IDENT           shift and go to state 9

    typename                       shift and go to state 13

state 5

    (0) S' -> text .



state 6

    (7) decl -> funcdecl .

    SEMICOLON       reduce using rule 7 (decl -> funcdecl .)


state 7

    (35) attrs -> LBRACKET . attrlist RBRACKET
    (36) attrlist -> . attr
    (37) attrlist -> . attr COMMA attrlist
    (38) attr -> . IDENT
    (39) attr -> . IDENT LPAREN constexpr RPAREN

    IDENT           shift and go to state 15

    attrlist                       shift and go to state 14
    attr                           shift and go to state 16

state 8

    (33) funcdecl -> typename . IDENT params

    IDENT           shift and go to state 17


state 9

    (48) typename -> IDENT .

    IDENT           reduce using rule 48 (typename -> IDENT .)


state 10

    (34) funcdecl -> attrs . typename IDENT params
    (48) typename -> . IDENT

    IDENT           shift and go to state 9

    typename                       shift and go to state 18

state 11

    (6) decl -> constdecl .

    SEMICOLON       reduce using rule 6 (decl -> constdecl .)


state 12

    (3) code -> stat SEMICOLON .
    (4) code -> stat SEMICOLON . code
    (3) code -> . stat SEMICOLON
    (4) code -> . stat SEMICOLON code
    (5) stat -> . decl
    (6) decl -> . constdecl
    (7) decl -> . funcdecl
    (8) constdecl -> . CONST typename IDENT EQUALS constexpr
    (33) funcdecl -> . typename IDENT params
    (34) funcdecl -> . attrs typename IDENT params
    (48) typename -> . IDENT
    (35) attrs -> . LBRACKET attrlist RBRACKET

    $end            reduce using rule 3 (code -> stat SEMICOLON .)
    CONST           shift and go to state 4
    IDENT           shift and go to state 9
    LBRACKET        shift and go to state 7

    decl                           shift and go to state 1
    stat                           shift and go to state 2
    code                           shift and go to state 19
    funcdecl                       shift and go to state 6
    typename                       shift and go to state 8
    attrs                          shift and go to state 10
    constdecl                      shift and go to state 11

state 13

    (8) constdecl -> CONST typename . IDENT EQUALS constexpr

    IDENT           shift and go to state 20


state 14

    (35) attrs -> LBRACKET attrlist . RBRACKET

    RBRACKET        shift and go to state 21


state 15

    (38) attr -> IDENT .
    (39) attr -> IDENT . LPAREN constexpr RPAREN

    COMMA           reduce using rule 38 (attr -> IDENT .)
    RBRACKET        reduce using rule 38 (attr -> IDENT .)
    LPAREN          shift and go to state 22


state 16

    (36) attrlist -> attr .
    (37) attrlist -> attr . COMMA attrlist

    RBRACKET        reduce using rule 36 (attrlist -> attr .)
    COMMA           shift and go to state 23


state 17

    (33) funcdecl -> typename IDENT . params
    (40) params -> . LPAREN paramlist RPAREN

    LPAREN          shift and go to state 24

    params                         shift and go to state 25

state 18

    (34) funcdecl -> attrs typename . IDENT params

    IDENT           shift and go to state 26


state 19

    (4) code -> stat SEMICOLON code .

    $end            reduce using rule 4 (code -> stat SEMICOLON code .)


state 20

    (8) constdecl -> CONST typename IDENT . EQUALS constexpr

    EQUALS          shift and go to state 27


state 21

    (35) attrs -> LBRACKET attrlist RBRACKET .

    IDENT           reduce using rule 35 (attrs -> LBRACKET attrlist RBRACKET .)


state 22

    (39) attr -> IDENT LPAREN . constexpr RPAREN
    (9) constexpr -> . number
    (10) constexpr -> . bool
    (11) constexpr -> . char
    (12) constexpr -> . string
    (13) constexpr -> . constref
    (14) number -> . dec
    (15) number -> . oct
    (16) number -> . hex
    (17) number -> . float
    (30) bool -> . BOOL
    (22) char -> . pchar
    (23) char -> . echar
    (24) char -> . achar
    (25) char -> . uchar
    (31) string -> . STRING
    (32) constref -> . IDENT
    (18) dec -> . INT
    (19) oct -> . OCT
    (20) hex -> . HEX
    (21) float -> . FLOAT
    (26) pchar -> . PCHAR
    (27) echar -> . ECHAR
    (28) achar -> . ACHAR
    (29) uchar -> . UCHAR

    BOOL            shift and go to state 51
    STRING          shift and go to state 33
    IDENT           shift and go to state 41
    INT             shift and go to state 48
    OCT             shift and go to state 32
    HEX             shift and go to state 44
    FLOAT           shift and go to state 49
    PCHAR           shift and go to state 40
    ECHAR           shift and go to state 46
    ACHAR           shift and go to state 31
    UCHAR           shift and go to state 43

    pchar                          shift and go to state 47
    string                         shift and go to state 42
    uchar                          shift and go to state 34
    hex                            shift and go to state 35
    float                          shift and go to state 28
    constref                       shift and go to state 50
    number                         shift and go to state 29
    char                           shift and go to state 30
    constexpr                      shift and go to state 45
    bool                           shift and go to state 36
    echar                          shift and go to state 37
    dec                            shift and go to state 52
    achar                          shift and go to state 38
    oct                            shift and go to state 39

state 23

    (37) attrlist -> attr COMMA . attrlist
    (36) attrlist -> . attr
    (37) attrlist -> . attr COMMA attrlist
    (38) attr -> . IDENT
    (39) attr -> . IDENT LPAREN constexpr RPAREN

    IDENT           shift and go to state 15

    attrlist                       shift and go to state 53
    attr                           shift and go to state 16

state 24

    (40) params -> LPAREN . paramlist RPAREN
    (41) paramlist -> .
    (42) paramlist -> . param
    (43) paramlist -> . param COMMA paramlist
    (44) param -> . typename IDENT
    (45) param -> . typename IDENT EQUALS constexpr
    (46) param -> . attrs typename IDENT
    (47) param -> . attrs typename IDENT EQUALS constexpr
    (48) typename -> . IDENT
    (35) attrs -> . LBRACKET attrlist RBRACKET

    RPAREN          reduce using rule 41 (paramlist -> .)
    IDENT           shift and go to state 9
    LBRACKET        shift and go to state 7

    param                          shift and go to state 54
    typename                       shift and go to state 55
    attrs                          shift and go to state 56
    paramlist                      shift and go to state 57

state 25

    (33) funcdecl -> typename IDENT params .

    SEMICOLON       reduce using rule 33 (funcdecl -> typename IDENT params .)


state 26

    (34) funcdecl -> attrs typename IDENT . params
    (40) params -> . LPAREN paramlist RPAREN

    LPAREN          shift and go to state 24

    params                         shift and go to state 58

state 27

    (8) constdecl -> CONST typename IDENT EQUALS . constexpr
    (9) constexpr -> . number
    (10) constexpr -> . bool
    (11) constexpr -> . char
    (12) constexpr -> . string
    (13) constexpr -> . constref
    (14) number -> . dec
    (15) number -> . oct
    (16) number -> . hex
    (17) number -> . float
    (30) bool -> . BOOL
    (22) char -> . pchar
    (23) char -> . echar
    (24) char -> . achar
    (25) char -> . uchar
    (31) string -> . STRING
    (32) constref -> . IDENT
    (18) dec -> . INT
    (19) oct -> . OCT
    (20) hex -> . HEX
    (21) float -> . FLOAT
    (26) pchar -> . PCHAR
    (27) echar -> . ECHAR
    (28) achar -> . ACHAR
    (29) uchar -> . UCHAR

    BOOL            shift and go to state 51
    STRING          shift and go to state 33
    IDENT           shift and go to state 41
    INT             shift and go to state 48
    OCT             shift and go to state 32
    HEX             shift and go to state 44
    FLOAT           shift and go to state 49
    PCHAR           shift and go to state 40
    ECHAR           shift and go to state 46
    ACHAR           shift and go to state 31
    UCHAR           shift and go to state 43

    pchar                          shift and go to state 47
    string                         shift and go to state 42
    constexpr                      shift and go to state 59
    uchar                          shift and go to state 34
    hex                            shift and go to state 35
    float                          shift and go to state 28
    constref                       shift and go to state 50
    number                         shift and go to state 29
    char                           shift and go to state 30
    bool                           shift and go to state 36
    echar                          shift and go to state 37
    dec                            shift and go to state 52
    achar                          shift and go to state 38
    oct                            shift and go to state 39

state 28

    (17) number -> float .

    RPAREN          reduce using rule 17 (number -> float .)
    COMMA           reduce using rule 17 (number -> float .)
    SEMICOLON       reduce using rule 17 (number -> float .)


state 29

    (9) constexpr -> number .

    SEMICOLON       reduce using rule 9 (constexpr -> number .)
    COMMA           reduce using rule 9 (constexpr -> number .)
    RPAREN          reduce using rule 9 (constexpr -> number .)


state 30

    (11) constexpr -> char .

    SEMICOLON       reduce using rule 11 (constexpr -> char .)
    COMMA           reduce using rule 11 (constexpr -> char .)
    RPAREN          reduce using rule 11 (constexpr -> char .)


state 31

    (28) achar -> ACHAR .

    SEMICOLON       reduce using rule 28 (achar -> ACHAR .)
    RPAREN          reduce using rule 28 (achar -> ACHAR .)
    COMMA           reduce using rule 28 (achar -> ACHAR .)


state 32

    (19) oct -> OCT .

    RPAREN          reduce using rule 19 (oct -> OCT .)
    COMMA           reduce using rule 19 (oct -> OCT .)
    SEMICOLON       reduce using rule 19 (oct -> OCT .)


state 33

    (31) string -> STRING .

    RPAREN          reduce using rule 31 (string -> STRING .)
    COMMA           reduce using rule 31 (string -> STRING .)
    SEMICOLON       reduce using rule 31 (string -> STRING .)


state 34

    (25) char -> uchar .

    COMMA           reduce using rule 25 (char -> uchar .)
    RPAREN          reduce using rule 25 (char -> uchar .)
    SEMICOLON       reduce using rule 25 (char -> uchar .)


state 35

    (16) number -> hex .

    RPAREN          reduce using rule 16 (number -> hex .)
    COMMA           reduce using rule 16 (number -> hex .)
    SEMICOLON       reduce using rule 16 (number -> hex .)


state 36

    (10) constexpr -> bool .

    SEMICOLON       reduce using rule 10 (constexpr -> bool .)
    COMMA           reduce using rule 10 (constexpr -> bool .)
    RPAREN          reduce using rule 10 (constexpr -> bool .)


state 37

    (23) char -> echar .

    COMMA           reduce using rule 23 (char -> echar .)
    RPAREN          reduce using rule 23 (char -> echar .)
    SEMICOLON       reduce using rule 23 (char -> echar .)


state 38

    (24) char -> achar .

    COMMA           reduce using rule 24 (char -> achar .)
    RPAREN          reduce using rule 24 (char -> achar .)
    SEMICOLON       reduce using rule 24 (char -> achar .)


state 39

    (15) number -> oct .

    RPAREN          reduce using rule 15 (number -> oct .)
    COMMA           reduce using rule 15 (number -> oct .)
    SEMICOLON       reduce using rule 15 (number -> oct .)


state 40

    (26) pchar -> PCHAR .

    SEMICOLON       reduce using rule 26 (pchar -> PCHAR .)
    COMMA           reduce using rule 26 (pchar -> PCHAR .)
    RPAREN          reduce using rule 26 (pchar -> PCHAR .)


state 41

    (32) constref -> IDENT .

    COMMA           reduce using rule 32 (constref -> IDENT .)
    RPAREN          reduce using rule 32 (constref -> IDENT .)
    SEMICOLON       reduce using rule 32 (constref -> IDENT .)


state 42

    (12) constexpr -> string .

    SEMICOLON       reduce using rule 12 (constexpr -> string .)
    COMMA           reduce using rule 12 (constexpr -> string .)
    RPAREN          reduce using rule 12 (constexpr -> string .)


state 43

    (29) uchar -> UCHAR .

    RPAREN          reduce using rule 29 (uchar -> UCHAR .)
    SEMICOLON       reduce using rule 29 (uchar -> UCHAR .)
    COMMA           reduce using rule 29 (uchar -> UCHAR .)


state 44

    (20) hex -> HEX .

    COMMA           reduce using rule 20 (hex -> HEX .)
    RPAREN          reduce using rule 20 (hex -> HEX .)
    SEMICOLON       reduce using rule 20 (hex -> HEX .)


state 45

    (39) attr -> IDENT LPAREN constexpr . RPAREN

    RPAREN          shift and go to state 60


state 46

    (27) echar -> ECHAR .

    COMMA           reduce using rule 27 (echar -> ECHAR .)
    RPAREN          reduce using rule 27 (echar -> ECHAR .)
    SEMICOLON       reduce using rule 27 (echar -> ECHAR .)


state 47

    (22) char -> pchar .

    COMMA           reduce using rule 22 (char -> pchar .)
    RPAREN          reduce using rule 22 (char -> pchar .)
    SEMICOLON       reduce using rule 22 (char -> pchar .)


state 48

    (18) dec -> INT .

    RPAREN          reduce using rule 18 (dec -> INT .)
    COMMA           reduce using rule 18 (dec -> INT .)
    SEMICOLON       reduce using rule 18 (dec -> INT .)


state 49

    (21) float -> FLOAT .

    RPAREN          reduce using rule 21 (float -> FLOAT .)
    COMMA           reduce using rule 21 (float -> FLOAT .)
    SEMICOLON       reduce using rule 21 (float -> FLOAT .)


state 50

    (13) constexpr -> constref .

    SEMICOLON       reduce using rule 13 (constexpr -> constref .)
    COMMA           reduce using rule 13 (constexpr -> constref .)
    RPAREN          reduce using rule 13 (constexpr -> constref .)


state 51

    (30) bool -> BOOL .

    SEMICOLON       reduce using rule 30 (bool -> BOOL .)
    COMMA           reduce using rule 30 (bool -> BOOL .)
    RPAREN          reduce using rule 30 (bool -> BOOL .)


state 52

    (14) number -> dec .

    RPAREN          reduce using rule 14 (number -> dec .)
    COMMA           reduce using rule 14 (number -> dec .)
    SEMICOLON       reduce using rule 14 (number -> dec .)


state 53

    (37) attrlist -> attr COMMA attrlist .

    RBRACKET        reduce using rule 37 (attrlist -> attr COMMA attrlist .)


state 54

    (42) paramlist -> param .
    (43) paramlist -> param . COMMA paramlist

    RPAREN          reduce using rule 42 (paramlist -> param .)
    COMMA           shift and go to state 61


state 55

    (44) param -> typename . IDENT
    (45) param -> typename . IDENT EQUALS constexpr

    IDENT           shift and go to state 62


state 56

    (46) param -> attrs . typename IDENT
    (47) param -> attrs . typename IDENT EQUALS constexpr
    (48) typename -> . IDENT

    IDENT           shift and go to state 9

    typename                       shift and go to state 63

state 57

    (40) params -> LPAREN paramlist . RPAREN

    RPAREN          shift and go to state 64


state 58

    (34) funcdecl -> attrs typename IDENT params .

    SEMICOLON       reduce using rule 34 (funcdecl -> attrs typename IDENT params .)


state 59

    (8) constdecl -> CONST typename IDENT EQUALS constexpr .

    SEMICOLON       reduce using rule 8 (constdecl -> CONST typename IDENT EQUALS constexpr .)


state 60

    (39) attr -> IDENT LPAREN constexpr RPAREN .

    COMMA           reduce using rule 39 (attr -> IDENT LPAREN constexpr RPAREN .)
    RBRACKET        reduce using rule 39 (attr -> IDENT LPAREN constexpr RPAREN .)


state 61

    (43) paramlist -> param COMMA . paramlist
    (41) paramlist -> .
    (42) paramlist -> . param
    (43) paramlist -> . param COMMA paramlist
    (44) param -> . typename IDENT
    (45) param -> . typename IDENT EQUALS constexpr
    (46) param -> . attrs typename IDENT
    (47) param -> . attrs typename IDENT EQUALS constexpr
    (48) typename -> . IDENT
    (35) attrs -> . LBRACKET attrlist RBRACKET

    RPAREN          reduce using rule 41 (paramlist -> .)
    IDENT           shift and go to state 9
    LBRACKET        shift and go to state 7

    param                          shift and go to state 54
    typename                       shift and go to state 55
    attrs                          shift and go to state 56
    paramlist                      shift and go to state 65

state 62

    (44) param -> typename IDENT .
    (45) param -> typename IDENT . EQUALS constexpr

    COMMA           reduce using rule 44 (param -> typename IDENT .)
    RPAREN          reduce using rule 44 (param -> typename IDENT .)
    EQUALS          shift and go to state 66


state 63

    (46) param -> attrs typename . IDENT
    (47) param -> attrs typename . IDENT EQUALS constexpr

    IDENT           shift and go to state 67


state 64

    (40) params -> LPAREN paramlist RPAREN .

    SEMICOLON       reduce using rule 40 (params -> LPAREN paramlist RPAREN .)


state 65

    (43) paramlist -> param COMMA paramlist .

    RPAREN          reduce using rule 43 (paramlist -> param COMMA paramlist .)


state 66

    (45) param -> typename IDENT EQUALS . constexpr
    (9) constexpr -> . number
    (10) constexpr -> . bool
    (11) constexpr -> . char
    (12) constexpr -> . string
    (13) constexpr -> . constref
    (14) number -> . dec
    (15) number -> . oct
    (16) number -> . hex
    (17) number -> . float
    (30) bool -> . BOOL
    (22) char -> . pchar
    (23) char -> . echar
    (24) char -> . achar
    (25) char -> . uchar
    (31) string -> . STRING
    (32) constref -> . IDENT
    (18) dec -> . INT
    (19) oct -> . OCT
    (20) hex -> . HEX
    (21) float -> . FLOAT
    (26) pchar -> . PCHAR
    (27) echar -> . ECHAR
    (28) achar -> . ACHAR
    (29) uchar -> . UCHAR

    BOOL            shift and go to state 51
    STRING          shift and go to state 33
    IDENT           shift and go to state 41
    INT             shift and go to state 48
    OCT             shift and go to state 32
    HEX             shift and go to state 44
    FLOAT           shift and go to state 49
    PCHAR           shift and go to state 40
    ECHAR           shift and go to state 46
    ACHAR           shift and go to state 31
    UCHAR           shift and go to state 43

    pchar                          shift and go to state 47
    string                         shift and go to state 42
    constexpr                      shift and go to state 68
    uchar                          shift and go to state 34
    hex                            shift and go to state 35
    float                          shift and go to state 28
    constref                       shift and go to state 50
    number                         shift and go to state 29
    char                           shift and go to state 30
    bool                           shift and go to state 36
    echar                          shift and go to state 37
    dec                            shift and go to state 52
    achar                          shift and go to state 38
    oct                            shift and go to state 39

state 67

    (46) param -> attrs typename IDENT .
    (47) param -> attrs typename IDENT . EQUALS constexpr

    COMMA           reduce using rule 46 (param -> attrs typename IDENT .)
    RPAREN          reduce using rule 46 (param -> attrs typename IDENT .)
    EQUALS          shift and go to state 69


state 68

    (45) param -> typename IDENT EQUALS constexpr .

    COMMA           reduce using rule 45 (param -> typename IDENT EQUALS constexpr .)
    RPAREN          reduce using rule 45 (param -> typename IDENT EQUALS constexpr .)


state 69

    (47) param -> attrs typename IDENT EQUALS . constexpr
    (9) constexpr -> . number
    (10) constexpr -> . bool
    (11) constexpr -> . char
    (12) constexpr -> . string
    (13) constexpr -> . constref
    (14) number -> . dec
    (15) number -> . oct
    (16) number -> . hex
    (17) number -> . float
    (30) bool -> . BOOL
    (22) char -> . pchar
    (23) char -> . echar
    (24) char -> . achar
    (25) char -> . uchar
    (31) string -> . STRING
    (32) constref -> . IDENT
    (18) dec -> . INT
    (19) oct -> . OCT
    (20) hex -> . HEX
    (21) float -> . FLOAT
    (26) pchar -> . PCHAR
    (27) echar -> . ECHAR
    (28) achar -> . ACHAR
    (29) uchar -> . UCHAR

    BOOL            shift and go to state 51
    STRING          shift and go to state 33
    IDENT           shift and go to state 41
    INT             shift and go to state 48
    OCT             shift and go to state 32
    HEX             shift and go to state 44
    FLOAT           shift and go to state 49
    PCHAR           shift and go to state 40
    ECHAR           shift and go to state 46
    ACHAR           shift and go to state 31
    UCHAR           shift and go to state 43

    pchar                          shift and go to state 47
    string                         shift and go to state 42
    constexpr                      shift and go to state 70
    uchar                          shift and go to state 34
    hex                            shift and go to state 35
    float                          shift and go to state 28
    constref                       shift and go to state 50
    number                         shift and go to state 29
    char                           shift and go to state 30
    bool                           shift and go to state 36
    echar                          shift and go to state 37
    dec                            shift and go to state 52
    achar                          shift and go to state 38
    oct                            shift and go to state 39

state 70

    (47) param -> attrs typename IDENT EQUALS constexpr .

    COMMA           reduce using rule 47 (param -> attrs typename IDENT EQUALS constexpr .)
    RPAREN          reduce using rule 47 (param -> attrs typename IDENT EQUALS constexpr .)

